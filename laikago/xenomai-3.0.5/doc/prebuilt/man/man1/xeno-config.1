'\" t
.\"     Title: xeno-config
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 2014/08/03
.\"    Manual: Xenomai Manual
.\"    Source: Xenomai 3.0.5
.\"  Language: English
.\"
.TH "XENO\-CONFIG" "1" "2014/08/03" "Xenomai 3\&.0\&.5" "Xenomai Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
xeno-config \- Retrieve Xenomai build flags and configuration
.SH "SYNOPSIS"
.sp
\fBxeno\-config\fR
.sp
\fBxeno\-config\fR \fB\-\-v\fR | \fB\-\-verbose\fR
.sp
\fBxeno\-config\fR \fB\-\-help\fR
.sp
\fBxeno\-config\fR \fB\-\-info\fR
.sp
\fBxeno\-config\fR \fB\-\-core\fR
.sp
\fBxeno\-config\fR \fB\-\-version\fR
.sp
\fBxeno\-config\fR [\fB\-\-cc\fR] [\fB\-\-ccld\fR] [\fB\-\-arch\fR] [\fB\-\-prefix\fR] [\fB\-\-posix|alchemy|rtdm|psos|vxworks|smokey\fR] [\fB\-\-compat\fR] [\fB\-\-auto\-init\fR|\fBno\-auto\-init\fR] [\fB\-\-auto\-init\-solib\fR] [\fB\-\-mode\-check\fR|\fBno\-mode\-check\fR] [\fB\-\-cflags\fR] [\fB\-\-ldflags\fR] [\fB\-\-library\-dir\fR|\fBlibdir\fR|\fBuser\-libdir\fR]
.SH "DESCRIPTION"
.sp
\fBxeno\-config\fR is a shell script which is aimed at retrieving the Xenomai build configuration data, such as the compiler and linker flags required for building applications\&. For this reason, \fBxeno\-config\fR is typically used in Makefiles\&.
.sp
\fBxeno\-config \-\-verbose\fR dumps the build configuration data in a human\-readable format\&.
.sp
Invoking \fBxeno\-config\fR without any options is equivalent to running \fBxeno\-config \-\-verbose \-\-help\fR\&.
.SH "OPTIONS"
.PP
\fB\-\-v, \-\-verbose\fR
.RS 4
Output all configuration information in a human\-readable format\&.
.RE
.PP
\fB\-\-help\fR
.RS 4
Output the list of available command\-line options\&. The command exits immediately after completion\&.
.RE
.PP
\fB\-\-version\fR
.RS 4
Output the Xenomai version\&.
.RE
.PP
\fB\-\-cc\fR
.RS 4
Output the path to the C compiler command used to build the Xenomai libraries and utilities, which is therefore suitable for compiling a Xenomai application\&.
.RE
.PP
\fB\-\-ccld\fR
.RS 4
Output a C compiler command suitable for linking a Xenomai application\&.
.RE
.PP
\fB\-\-arch\fR
.RS 4
Output the target CPU architecture Xenomai was compiled for, e\&.g\&. arm, x86, powerpc etc\&. This may differ from the CPU architecture of the current system, if cross\-compiling\&.
.RE
.PP
\fB\-\-prefix\fR
.RS 4
Output the absolute path to the Xenomai installation directory\&.
.RE
.PP
\fB\-\-[skin=]{posix, alchemy, rtdm, psos, vxworks, smokey, cobalt}\fR
.RS 4
Select the API/skin for which
\fBxeno\-config\fR
should print the information required\&. The
\fBskin=\fR
prefix is optional and may be omitted, e\&.g\&.
\fB\-\-posix\fR
is equivalent to
\fB\-\-skin=posix\fR, selecting the POSIX API\&.
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.sp
\fB\-\-native\fR and \fB\-\-skin=native\fR are accepted for backward compatibility purpose\&. They are stricly equivalent as passing \fB\-\-alchemy \-\-compat\fR\&. Likewise, passing \fB\-\-rtdm\fR or \fB\-\-skin=rtdm\fR is stricly equivalent as passing \fB\-\-posix\fR, enabling POSIX I/O routines to be wrapped to their respective Xenomai implementation\&.
.sp .5v
.RE
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCaution\fR
.ps -1
.br
.sp
Over Cobalt, only \fBxeno\-config \-\-posix \-\-ldflags\fR (or \fB\-\-rtdm\fR as an alias) returns the proper linker flags to cause POSIX routines invoked by the application to be wrapped to their respective Xenomai implementation\&. No other API will imply such wrapping\&. For this reason, \fB\-\-cobalt \-\-ldflags\fR should be used for linking exclusively against the Cobalt library (i\&.e\&. libcobalt\&.so) \fBwithout\fR symbol wrapping\&. Conversely, mentioning \fB\-\-posix\fR along with other API switches with \fB\-\-ldflags\fR will cause POSIX symbol wrapping to take place, e\&.g\&. use \fB\-\-posix \-\-alchemy \-\-ldflags\fR for mixed API support with POSIX symbol wrapping\&.
.sp .5v
.RE
.PP
\fB\-\-cflags\fR
.RS 4
Output the C compiler command\-line options (\fICFLAGS\fR) which are required to compile applications based on the selected Xenomai API/skin\&.
.RE
.PP
\fB\-\-ldflags\fR
.RS 4
Output the C compiler command\-line options (\fILDFLAGS\fR) which are required to link applications based on the selected Xenomai API/skin\&.
.RE
.PP
\fB\-\-library\-dir, \-\-libdir, \-\-user\-libdir\fR
.RS 4
These switches are synonyms, for retrieving the absolute path to the Xenomai libraries\&.
.RE
.PP
\fB\-\-auto\-init\fR, \fB\-\-no\-auto\-init\fR
.RS 4
All Xenomai APIs but POSIX are based on the Copperplate library, which automatically initializes when the application process starts\&.
\fB\-\-no\-auto\-init\fR
can be passed to disable such initialization\&. In such a case, the application code shall call the
copperplate_init()
routine manually, as part of its initialization chores on behalf on the
main()
routine,
\fBbefore\fR
any real\-time service is invoked\&.
.RE
.sp
This flag makes sense when passed along with \-\-ldflags only\&. \fBxeno\-config\fR enables the Copperplate auto\-init feature by default\&.
.PP
\fB\-\-mode\-check\fR, \fB\-\-no\-mode\-check\fR
.RS 4
Over Cobalt, a set of standard routines which may invoke regular Linux system calls can trigger an assertion failure on entry, if the caller must leave the real\-time mode (aka "secondary mode switch") to execute such routine\&.
.RE
.sp
The assertion failure is triggered if the calling thread has set the PTHREAD_WARNSW flag by a call to pthread_setmode_np()\&.
.sp
By default, the mode checking routines are substituted to the original ones using the symbol wrapping mechanism also used for interposing on POSIX services\&. \fB\-\-no\-mode\-check\fR disables such substitution\&.
.sp
These flags make sense when passed along with \-\-ldflags only\&.
.PP
\fB\-\-auto\-init\-solib\fR
.RS 4
This switch enables the auto\-initialization feature described above for a shared library target instead of a pure executable\&. The main difference resides in a position\-independent (PIC) glue code being used for bootstrapping the initialization\&.
.RE
.sp
The bootstrap code runs when the shared library is attached to a running executable, either because it appears in the static dependencies of this executable, or when loaded dynamically via the dlopen() interface\&.
.PP
\fB\-\-core\fR
.RS 4
Output the name of the real\-time core the current Xenomai installation was built for\&. The possible values are
\fIcobalt\fR
or
\fImercury\fR, depending on the configuration switch
\fB\-\-with\-core\fR
used for building the Xenomai libraries and utilities\&.
.RE
.PP
\fB\-\-compat\fR
.RS 4
Enable the Xenomai 2\&.x compatibility mode for the API/skin selected\&. This switch affects the
\fIAlchemy\fR
and POSIX APIs, turning on a set of source\-level compatibility wrappers when present\&.
.RE
.PP
\fB\-\-info\fR
.RS 4
Dump information about the running Xenomai\-enabled system\&. Unlike most other options,
\fB\-\-info\fR
is aimed at being used on the target system running Xenomai, for retrieving the current setup information\&. The output of such command is a valuable information when reporting any runtime issue to
the Xenomai mailing list\&. The command exits immediately after completion\&.
.RE
.SH "ENVIRONMENT VARIABLES"
.PP
\fBDESTDIR\fR
.RS 4
Xenomai\(cqs handling of
\fBDESTDIR\fR
is conformant to the GNU coding and installation standards, for generating pathnames rooted at some staging area on the build system\&. Such staging area is commonly NFS\-mounted from the target system running Xenomai\&.
.RE
.sp
If the \fBDESTDIR\fR variable is set in the environment of \fBxeno\-config\fR, its contents is prepended to all directory and file names based on the Xenomai installation root which may be output by the command\&.
.sp
If \fBDESTDIR\fR was set when installing Xenomai \- typically after cross\-compiling \- \fBDESTDIR\fR must be set to the same value before calling \fBxeno\-config\fR for accessing the target\-based directories and files from the build system\&.
.sp
e\&.g\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$ configure \-\-prefix=/usr \-\-includedir=/usr/include/xenomai
$ make install DESTDIR=/nfsroot/target
$ DESTDIR=/nfsroot/target /nfsroot/target/bin/xeno\-config \-\-alchemy \-\-cflags
\-I/nfsroot/target/usr/include/xenomai/cobalt
\-I/nfsroot/target/usr/include/xenomai \-D_GNU_SOURCE
\-D_REENTRANT \-D__COBALT__
\-I/nfsroot/target/usr/include/xenomai/alchemy
.fi
.if n \{\
.RE
.\}
.SH "EXIT STATUS"
.PP
\fB0\fR
.RS 4
Success\&.
.RE
.PP
\fBnon\-zero\fR
.RS 4
Error\&.
.RE
