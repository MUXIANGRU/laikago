V1.1.3
------

2019.8.10
--------

Description
-----------
- Decrease interruptions.

Features
--------

Known Issues
------------
- X86 uses core 2 and 3.
- ARM(TX2) uses core 4 and 5. The core 1 and 2 of TX2 are more likely have frequency reduction.

=============================================================================================

V1.1.2
------

2019.7.4
--------

Description
-----------
- Abolish "#define", which causes conflicts between user and library macros.
  Now use "constexpr" instead. Thanks Stuart Anderson.
- Add C++11 compile option.

Features
--------

Known Issues
------------
- Fixed "-fPIC" related problem for shared library "liblaikago_comm.so". 

=============================================================================================

V1.1.1
------

2019.6.25
--------

Description
-----------
- Move "SetLCM" and "SetPrint" from 'class control' to 'class loop'. 
- Abolish publish or subscribe the state or command in ROS now, which causes data lag.

Features
--------
- Add 'print' thread.

Known Issues
------------

=============================================================================================

V1.1.0
------

2019.6.1
--------

Description
-----------
- Abolish global variables, like "SendHigh, SendLow, RecvHigh, RecvLow". Now use Class.
- Replace directory "laikago_ws" with "laokago_sdk".
- Examples are now under "laokago_sdk/examples".
- Move 'liblaikago_comm.so' to folder "laikago_sdk/lib".
- The name of send and receive variables are user defined and should be passed in.
- The name of callback functions are user defined and should be passed in.
- Replace function SetLevel() with Class Control(high or low level).
- Replace "status" with "state".

Features
--------
- Using LCM module for cross-process communication.
- Class UDP can be used to transfer user defined data now.
- Class loop can help running two or three soft-realtime threads. 
  Each thread corresponds to a callback.
- Add namespace "laikago".
- All receive functions will save data in buffer first, that's why recv callback exists.

Known Issues
------------
- Fixed 500Hz to control real robot with UDP.

=============================================================================================

V1.0.0
------

2018.12.20
----------

Description
-----------
- Simple SDK for rapid development. 
- Integrate and simplify send and receive function of UDP.
- Running with multi threads in soft-realtime mode.

Features
--------

Known Issues
------------
